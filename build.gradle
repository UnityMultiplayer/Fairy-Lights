plugins {
    id 'maven-publish'
    id 'fabric-loom' version '1.10-SNAPSHOT'
}

version = '8.0.0-fabric'
group = 'me.paulf.fairylights'
archivesBaseName = 'fairylights'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

//sourceSets.main.resources { srcDir 'src/generated/resources' }

fabricApi {
    configureDataGeneration()
}

repositories {
    mavenLocal()
    maven {
        name = 'Progwml6 maven'
        url = 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name = 'ModMaven'
        url = 'https://modmaven.dev'
    }
    maven {
        url 'https://maven.parchmentmc.org'
    }
    maven {
        url 'https://maven.architectury.dev'
    }
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
    maven {
        name = "Ladysnake Mods"
        url = 'https://maven.ladysnake.org/releases'
    }
    maven {
        name = "devOS"
        url "https://mvn.devos.one/releases/"
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/Salandora/Porting-Lib")
        credentials {
            username = System.getenv("GITHUB_USER")
            password = System.getenv("GITHUB_TOKEN")
        }
        content {
            includeGroupByRegex "io.github.fabricators_of_create.Porting-Lib.*"
        }
    }

    maven {
        name = "devOS (Snapshots)"
        url "https://mvn.devos.one/snapshots/"
    }

    maven {
        name = "JitPack"
        url "https://jitpack.io/"
    }

    maven {
        name = "Cafeteria Dev"
        url "https://maven.cafeteria.dev/releases/"
    }

    maven {
        name = "JamiesWhiteShirt Dev"
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    }
}

dependencies {
    minecraft 'com.mojang:minecraft:1.21.1'
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.21.1:2024.11.17@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:0.16.10"
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.115.1+1.21.1"

    modImplementation "dev.architectury:architectury-fabric:13.0.8"

    def jeiVersion = "19.21.0.247"
    modCompileOnly("mezz.jei:jei-1.21.1-common-api:$jeiVersion")
    modCompileOnly("mezz.jei:jei-1.21.1-fabric-api:$jeiVersion")
    modRuntimeOnly("mezz.jei:jei-1.21.1-fabric:$jeiVersion")

    modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:21.1.3"

    def ccaVersion = "6.1.2"
    include(modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-base:$ccaVersion"))
    include(modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-block:$ccaVersion"))
    include(modImplementation("org.ladysnake.cardinal-components-api:cardinal-components-entity:$ccaVersion"))

    def portingLibs = [ "accessors", "base", "client_events", "conditions", "core", "data", "fluids", "entity", "item_abilities", "lazy_registration", "level_events", "loot", "model_loader", "models", "render_types", "transfer" ]
    for (lib in portingLibs) {
        modImplementation(include("io.github.fabricators_of_create.Porting-Lib:$lib:${property("porting_lib_version")}"))
    }
}

processResources {
    def properties = [
            "loader_version": "0.16.10",
            "fabric_version": "0.115.1+1.21.1",
            "minecraft_version": "1.21.1",
            "architectury_version": "13.0.8",
            "version": project.version
    ]

    properties.forEach { key, value ->
        inputs.property(key, value)
    }

    filesMatching("fabric.mod.json") {
        expand(properties)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}